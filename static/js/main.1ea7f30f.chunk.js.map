{"version":3,"sources":["services/firebase.js","services/useAuth.js","components/Navbar.jsx","constants.js","services/useTask.js","services/useGlobals.js","components/TaskRow.js","TaskList.jsx","components/DateAndTimeSelector.js","components/FormButtons.js","components/DropDown.js","TaskForm.jsx","components/ProjectForm.js","components/DefaultProjectList.js","ProjectList.js","services/Seo.js","components/TaskDetail.js","App.jsx","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","authContext","createContext","useAuth","useContext","AuthContextProvider","children","auth","useState","user","setUser","getAuth","signIn","provider","GoogleAuthProvider","signInWithPopup","then","result","credential","credentialFromResult","token","accessToken","_user","console","log","catch","error","errorCode","code","errorMessage","message","email","credentialFromError","signOut","a","onAuthStateChanged","useAuthProvider","Provider","value","Navbar","className","role","to","onClick","e","document","getElementById","classList","toggle","target","handleNavbarClick","id","defaultDueDate","selectPriority","priority","display_name","key","defaultProjectIds","getNextDayTimeStamp","Date","moment","add","setHours","getTime","getPrevDayTimeStamp","db","getFirestore","taskContext","useTask","TaskContextProvider","task","projects","setProjects","currentProject","setCurrentProject","tasks","setTasks","reloadTaskFlag","setReloadTaskFlag","reloadProjects","setReloadProjects","defaultProjects","setDefaultProjects","reloadDefaultTasks","setReloadDefaultTasks","defaultProjectId","setDefaultProjectId","addTask","_newTask","dueDate","uid","archived","project","constants","forEach","pId","toString","trim","taskRef","collection","addDoc","newTask","updateTask","taskId","updatedTask","doc","updateDoc","timestamp","serverTimestamp","deleteTask","setDoc","merge","addProject","title","description","_project","projectRef","newProject","deleteProject","q","query","getDoc","data","updateProject","updatedProject","updateRef","changeCurrentProject","changeTaskStatus","status","completed","_tasks","map","useEffect","getProjects","fs","defaultProjectQuery","snap","where","getDocs","_projects","_defaultProjects","push","_getTasks","find","_task","toDate","collectionGroup","useTaskProvider","glbalContext","useGlobals","GlobalContextProvider","global","taskDetailActivated","setTaskDetailActivated","detailTask","setDetailTask","activateTaskDetailModal","deactivateTaskDetailModal","useGlobalProvider","TaskRow","store","globals","style","paddingTop","paddinBottom","subtract","selectClassName","calendar","mapTaskTable","organizedTaskLists","TaskTable","separator","length","element","TaskList","taskTable","setTaskTable","_taskTable","taskList","sortOrder","i","taskListObj","format","startDate","endDate","filter","mapTaskByDueDate","priorityList","sort","p1","p2","index","p","parseInt","mapTasksbyPriority","DateAndTimeSelector","dateTime","setDateTime","activated","setActivated","tempDateTime","setTempDateTime","type","onChange","handleDateChange","timeDetail","split","handleTimeChange","FormButtons","button1Click","button1Text","button2Click","button2Text","DropDown","initialValue","handleValueChange","dropDownOptions","TaskForm","setTitle","titleError","setTitleError","setDueDate","setDescription","setPriority","validateInput","resetForm","placeholder","onFocus","rows","ProjectForm","handleAddProject","name","DefaultProjectList","ProjectList","handleChangeProject","Seo","Helmet","content","src","crossorigin","TaskDetail","customDueDate","setCustomDueDate","handleCancel","App","marginLeft","marginRight","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1ea7f30f.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB7UTq-y1DjPb0UuNJ83ZLnE81Ht405OQI\",\r\n  authDomain: \"todo-karma.firebaseapp.com\",\r\n  projectId: \"todo-karma\",\r\n  storageBucket: \"todo-karma.appspot.com\",\r\n  messagingSenderId: \"757248016606\",\r\n  appId: \"1:757248016606:web:60058f2edc4c08c1b5824f\",\r\n  measurementId: \"G-07LN1JMQ97\",\r\n};\r\n\r\n// Initialize Firebase\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const analytics = getAnalytics(app);\r\n","import React, { createContext, useContext, useState } from \"react\";\r\nimport {\r\n  getAuth,\r\n  onAuthStateChanged,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\n\r\nconst authContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(authContext);\r\n}\r\n\r\nexport function AuthContextProvider({ children }) {\r\n  const auth = useAuthProvider();\r\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\nfunction useAuthProvider() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const auth = getAuth();\r\n\r\n  onAuthStateChanged(auth, (_user) => {\r\n    if (_user) {\r\n      setUser(_user);\r\n    } else {\r\n      setUser(null);\r\n    }\r\n  });\r\n\r\n  function signIn() {\r\n    const provider = new GoogleAuthProvider();\r\n    signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        const token = credential.accessToken;\r\n        const _user = result.user;\r\n        setUser(_user);\r\n        console.log({ credential, token, _user });\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        const email = error.email;\r\n        // The AuthCredential type that was used.\r\n        const credential = GoogleAuthProvider.credentialFromError(error);\r\n\r\n        console.log(\"signing in\", {\r\n          errorCode,\r\n          errorMessage,\r\n          email,\r\n          credential,\r\n        });\r\n      });\r\n  }\r\n\r\n  async function signOut() {\r\n    await auth.signOut();\r\n    setUser(null);\r\n  }\r\n\r\n  return {\r\n    user,\r\n    signIn,\r\n    signOut,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { useAuth } from \"./../services/useAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const auth = useAuth();\r\n\r\n  function handleNavbarClick(e) {\r\n    document.getElementById(\"navbarMain\").classList.toggle(\"is-active\");\r\n    e.target.classList.toggle(\"is-active\");\r\n  }\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar is-light has-background-success-light\"\r\n      role=\"navigation\"\r\n      aria-label=\"main navigation\"\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"navbar-brand\">\r\n          <Link className=\"navbar-item\" to=\"/\">\r\n            <span className=\"is-size-4 has-text-weight-semibold \">\r\n              <strong>KARMA</strong>\r\n            </span>\r\n          </Link>\r\n\r\n          <button\r\n            className=\"navbar-burger has-text-weight-bold\"\r\n            aria-label=\"menu\"\r\n            aria-expanded=\"false\"\r\n            onClick={(e) => handleNavbarClick(e)}\r\n            data-target=\"navbarBasicExample\"\r\n          >\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </button>\r\n        </div>\r\n\r\n        <div id=\"navbarMain\" className=\"navbar-menu\">\r\n          {/* <div className=\"navbar-start\">\r\n            <div className=\"navbar-item\">\r\n              <Link to=\"/\">Home</Link>\r\n            </div>\r\n\r\n            <Link to=\"/projects\" className=\"navbar-item\">\r\n              More\r\n            </Link>\r\n          </div> */}\r\n\r\n          <div className=\"navbar-end\">\r\n            <div className=\"navbar-item\">\r\n              {auth.user ? (\r\n                <div className=\"buttons\">\r\n                  <button\r\n                    className=\"button has-background-success-light\"\r\n                    onClick={() => auth.signOut()}\r\n                  >\r\n                    Log Out\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"buttons\">\r\n                  <button\r\n                    className=\"button has-background-success-light\"\r\n                    onClick={() => auth.signIn()}\r\n                  >\r\n                    <strong>Sign up</strong>\r\n                  </button>\r\n                  <button\r\n                    className=\"button has-background-success-light\"\r\n                    onClick={() => auth.signIn()}\r\n                  >\r\n                    Log in\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import moment from \"moment\";\r\n\r\nexport const defaultDueDate = \"1970-01-01T00:00:00.000Z\";\r\n\r\nexport const selectPriority = [\r\n  {\r\n    priority: \"select priority\",\r\n    value: 1,\r\n    display_name: \"For later\",\r\n    key: 1,\r\n  },\r\n  {\r\n    priority: \"p5 Urgent\",\r\n    value: 5,\r\n    display_name: \"Urgent tasks\",\r\n    key: 2,\r\n  },\r\n  {\r\n    priority: \"p4 High\",\r\n    value: 4,\r\n    display_name: \"High priority tasks\",\r\n    key: 3,\r\n  },\r\n  {\r\n    priority: \"p3 Medium\",\r\n    value: 3,\r\n    display_name: \"Medium priority tasks\",\r\n    key: 4,\r\n  },\r\n  {\r\n    priority: \"p2 Low\",\r\n    value: 2,\r\n    display_name: \"Low priority tasks \",\r\n    key: 5,\r\n  },\r\n];\r\n\r\nexport const defaultProjectIds = [\"0\", \"1\"];\r\n\r\nexport function isNumeric(string) {\r\n  if (typeof string != \"string\") return false;\r\n  return !isNaN(string) && !isNaN(parseFloat(string));\r\n}\r\n\r\nexport function selectDateTime(dateTime, source, initialDateTime) {\r\n  let _date = null;\r\n  if (source === \"tags\") {\r\n    _date = new Date(dateTime).getTime();\r\n  } else if (source === \"date\") {\r\n    _date = new Date(dateTime);\r\n  } else if (source === \"time\") {\r\n    const timeFragment = dateTime.split(\":\");\r\n    _date = new Date(initialDateTime).setHours(\r\n      timeFragment[0],\r\n      timeFragment[1],\r\n      0,\r\n      0\r\n    );\r\n  } else {\r\n    _date = new Date(dateTime);\r\n  }\r\n  return _date;\r\n}\r\n\r\nexport function getNextDayTimeStamp() {\r\n  return new Date(\r\n    new Date(moment(new Date()).add(1, \"days\")).setHours(0, 0, 0, 0)\r\n  ).getTime();\r\n}\r\n\r\nexport function getPrevDayTimeStamp() {\r\n  return new Date(new Date().setHours(0, 0, 0, 0)).getTime();\r\n}\r\n","import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getFirestore,\r\n  where,\r\n  query,\r\n  getDocs,\r\n  addDoc,\r\n  updateDoc,\r\n  setDoc,\r\n  serverTimestamp,\r\n  getDoc,\r\n  collectionGroup,\r\n} from \"firebase/firestore\";\r\nimport { useAuth } from \"./useAuth\";\r\nimport * as constants from \"./../constants\";\r\n\r\nconst db = getFirestore();\r\n\r\nconst taskContext = createContext(null);\r\n\r\nexport function useTask() {\r\n  return useContext(taskContext);\r\n}\r\n\r\nexport function TaskContextProvider({ children }) {\r\n  const task = useTaskProvider();\r\n  return <taskContext.Provider value={task}>{children}</taskContext.Provider>;\r\n}\r\n\r\nconst fs = \":::::::::::::::::::Firestore fetch:::::::::::::::::::::\";\r\n\r\nfunction useTaskProvider() {\r\n  const auth = useAuth();\r\n  const [projects, setProjects] = useState([]);\r\n  const [currentProject, setCurrentProject] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [reloadTaskFlag, setReloadTaskFlag] = useState(false);\r\n  const [reloadProjects, setReloadProjects] = useState(false);\r\n  const [defaultProjects, setDefaultProjects] = useState([]);\r\n  const [reloadDefaultTasks, setReloadDefaultTasks] = useState(false);\r\n  const [defaultProjectId, setDefaultProjectId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getProjects() {\r\n      if (auth.user) {\r\n        console.log(fs, \"projects\");\r\n\r\n        const defaultProjectQuery = query(doc(db, \"users\", auth.user.uid));\r\n\r\n        let snap = await getDoc(defaultProjectQuery);\r\n        const defaultProjectId = snap.data().defaultProjectId;\r\n        setDefaultProjectId(defaultProjectId);\r\n        const q = query(\r\n          collection(db, \"projects\"),\r\n          where(\"uid\", \"==\", auth.user.uid),\r\n          where(\"archived\", \"==\", false)\r\n        );\r\n        snap = await getDocs(q);\r\n\r\n        // set projects and current project\r\n        const _projects = [];\r\n        const _defaultProjects = [];\r\n        snap.forEach((value) => {\r\n          if (value.id === defaultProjectId.trim()) {\r\n            // console.log(\"adding project to default ones\", value.id);\r\n            _defaultProjects.push({ ...value.data(), id: value.id });\r\n          } else {\r\n            // console.log(\"adding normal projects\", value.id);\r\n            _projects.push({ ...value.data(), id: value.id });\r\n          }\r\n        });\r\n\r\n        setProjects(_projects);\r\n        setDefaultProjects(_defaultProjects);\r\n        setCurrentProject(defaultProjectId.trim());\r\n      } else {\r\n        setProjects([]);\r\n        setDefaultProjects([]);\r\n        setCurrentProject(null);\r\n      }\r\n    }\r\n\r\n    getProjects();\r\n    return () => {};\r\n  }, [auth.user, reloadProjects]);\r\n\r\n  useEffect(() => {\r\n    async function _getTasks() {\r\n      if (auth.user && currentProject) {\r\n        console.log(fs, \"tasks\");\r\n        if (\r\n          constants.defaultProjectIds.find(\r\n            (projectId) => currentProject === projectId\r\n          )\r\n        ) {\r\n          setTasks([]);\r\n          setReloadDefaultTasks((reloadDefaultTasks) => !reloadDefaultTasks);\r\n        } else {\r\n          const q = query(\r\n            collection(db, \"projects\", currentProject, \"tasks\"),\r\n            where(\"archived\", \"==\", false),\r\n            where(\"completed\", \"==\", false)\r\n          );\r\n          const snap = await getDocs(q);\r\n\r\n          const _tasks = [];\r\n          snap.forEach((value) => {\r\n            const _task = { ...value.data(), id: value.id };\r\n            _task.dueDate = _task.dueDate.toDate();\r\n            _tasks.push(_task);\r\n          });\r\n\r\n          setTasks(_tasks);\r\n        }\r\n      } else {\r\n        setTasks([]);\r\n      }\r\n    }\r\n\r\n    _getTasks();\r\n    return () => {};\r\n  }, [auth.user, currentProject, reloadTaskFlag]);\r\n\r\n  useEffect(() => {\r\n    async function _getTasks() {\r\n      if (constants.defaultProjectIds.find((pId) => pId === currentProject)) {\r\n        const q =\r\n          currentProject.toString() === \"0\"\r\n            ? query(\r\n                collectionGroup(db, \"tasks\"),\r\n                where(\"uid\", \"==\", auth.user.uid),\r\n                where(\"archived\", \"==\", false),\r\n                where(\"completed\", \"==\", false),\r\n                where(\r\n                  \"dueDate\",\r\n                  \">\",\r\n                  new Date(constants.getPrevDayTimeStamp())\r\n                ),\r\n                where(\"dueDate\", \"<\", new Date(constants.getNextDayTimeStamp()))\r\n              )\r\n            : query(\r\n                collectionGroup(db, \"tasks\"),\r\n                where(\"uid\", \"==\", auth.user.uid),\r\n                where(\"archived\", \"==\", false),\r\n                where(\"completed\", \"==\", false),\r\n                where(\"dueDate\", \">\", new Date(constants.getPrevDayTimeStamp()))\r\n              );\r\n\r\n        const _tasks = [];\r\n        const snapShot = await getDocs(q);\r\n        snapShot.forEach((value) => {\r\n          const _task = { ...value.data(), id: value.id };\r\n          _task.dueDate = _task.dueDate.toDate();\r\n          _tasks.push(_task);\r\n        });\r\n        setTasks(_tasks);\r\n      }\r\n    }\r\n\r\n    _getTasks();\r\n\r\n    return () => {};\r\n  }, [auth.user, reloadDefaultTasks, currentProject]);\r\n\r\n  async function addTask(_newTask) {\r\n    if (auth.user && _newTask) {\r\n      console.log(_newTask);\r\n      _newTask.dueDate = new Date(_newTask.dueDate) || null;\r\n      _newTask.uid = auth.user.uid;\r\n      _newTask.archived = false;\r\n      let project = currentProject;\r\n      constants.defaultProjectIds.forEach((pId) => {\r\n        if (currentProject.toString().trim() === pId.toString().trim()) {\r\n          project = defaultProjectId;\r\n        }\r\n      });\r\n\r\n      const taskRef = collection(db, \"projects\", project, \"tasks\");\r\n\r\n      const newTask = await addDoc(taskRef, {\r\n        ..._newTask,\r\n      });\r\n      setReloadTaskFlag(!reloadTaskFlag);\r\n      return newTask.id;\r\n    }\r\n  }\r\n\r\n  async function updateTask(taskId, updatedTask) {\r\n    if (auth.user) {\r\n      const taskRef = doc(db, \"projects\", currentProject, \"tasks\", taskId);\r\n      await updateDoc(taskRef, {\r\n        ...updatedTask,\r\n        timestamp: serverTimestamp(),\r\n      });\r\n      setReloadTaskFlag(!reloadTaskFlag);\r\n    } else {\r\n      console.log(\"user not logged in\", \"update\");\r\n    }\r\n  }\r\n\r\n  async function deleteTask(taskId) {\r\n    if (auth.user && taskId) {\r\n      const taskRef = doc(db, \"projects\", currentProject, \"tasks\", taskId);\r\n      await setDoc(taskRef, { archived: true }, { merge: true });\r\n      setReloadTaskFlag(!reloadTaskFlag);\r\n    } else {\r\n      console.log(\"user not logged in \", \"delete \");\r\n    }\r\n  }\r\n\r\n  async function addProject(title, description = \"\") {\r\n    if (auth.user) {\r\n      const _project = {\r\n        title,\r\n        description,\r\n        timestamp: serverTimestamp(),\r\n        uid: auth.user.uid,\r\n        archived: false,\r\n      };\r\n      const projectRef = collection(db, \"projects\");\r\n      const newProject = await addDoc(projectRef, { ..._project });\r\n      setReloadProjects(!reloadProjects);\r\n      return newProject.id;\r\n    } else {\r\n      console.log(\"user not logged in\", \"project add \");\r\n    }\r\n  }\r\n\r\n  async function deleteProject(projectId) {\r\n    if (auth.user && projectId && projectId !== defaultProjectId) {\r\n      const projectRef = doc(db, \"projects\", projectId);\r\n      const q = query(collection(db, \"projects\", projectId, \"tasks\"));\r\n      const _tasksSnap = await getDoc(q);\r\n      _tasksSnap.forEach(async (value) => {\r\n        await updateDoc(doc(db, \"projects\", projectId, \"tasks\", value.id), {\r\n          ...value.data(),\r\n          archived: true,\r\n        });\r\n      });\r\n      const project = await getDoc(projectRef);\r\n      await updateDoc(projectRef, {\r\n        ...project,\r\n        archived: true,\r\n      });\r\n      setReloadProjects(!reloadProjects);\r\n      return;\r\n    } else {\r\n      console.log(\"user not logged in\", \"delete project \");\r\n    }\r\n  }\r\n\r\n  async function updateProject(updatedProject) {\r\n    if (auth.user) {\r\n      const projectRef = doc(db, \"projects\", currentProject);\r\n      const updateRef = await updateDoc(projectRef, {\r\n        ...updatedProject,\r\n        timestamp: serverTimestamp(),\r\n      });\r\n      setReloadProjects(!reloadProjects);\r\n      return updateRef.id;\r\n    } else {\r\n      console.log(\"user not logged in\", \"update project\");\r\n    }\r\n  }\r\n\r\n  async function changeCurrentProject(projectId) {\r\n    if (auth.user) {\r\n      if (projectId !== currentProject) {\r\n        setCurrentProject(projectId);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function changeTaskStatus(taskId, status) {\r\n    if (auth.user && taskId) {\r\n      const q = query(doc(db, \"projects\", currentProject, \"tasks\", taskId));\r\n      await updateDoc(q, {\r\n        completed: status,\r\n      });\r\n      const _tasks = tasks.map((task) => {\r\n        if (task.id === taskId) {\r\n          task.completed = status;\r\n        }\r\n        return task;\r\n      });\r\n      setTasks(_tasks);\r\n      setReloadTaskFlag(!reloadTaskFlag);\r\n    }\r\n  }\r\n\r\n  return {\r\n    tasks,\r\n    projects,\r\n    currentProject,\r\n    defaultProjects,\r\n    // tasks\r\n    addTask,\r\n    updateTask,\r\n    deleteTask,\r\n    // projects\r\n    addProject,\r\n    deleteProject,\r\n    updateProject,\r\n    //other\r\n    changeCurrentProject,\r\n    changeTaskStatus,\r\n  };\r\n}\r\n","import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst glbalContext = createContext();\r\n\r\nexport function useGlobals() {\r\n  return useContext(glbalContext);\r\n}\r\n\r\nexport function GlobalContextProvider({ children }) {\r\n  const global = useGlobalProvider();\r\n  return (\r\n    <glbalContext.Provider value={global}>{children}</glbalContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useGlobalProvider() {\r\n  const [taskDetailActivated, setTaskDetailActivated] = useState(false);\r\n  const [detailTask, setDetailTask] = useState(null);\r\n\r\n  function activateTaskDetailModal(task) {\r\n    setTaskDetailActivated(true);\r\n    setDetailTask(task);\r\n  }\r\n\r\n  function deactivateTaskDetailModal() {\r\n    setDetailTask(null);\r\n    setTaskDetailActivated(false);\r\n  }\r\n\r\n  return {\r\n    taskDetailActivated,\r\n    detailTask,\r\n    activateTaskDetailModal,\r\n    deactivateTaskDetailModal,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { useTask } from \"../services/useTask\";\r\nimport { useGlobals } from \"../services/useGlobals\";\r\nimport moment from \"moment\";\r\nimport { defaultDueDate } from \"../constants\";\r\n\r\nfunction TaskRow({ task }) {\r\n  const store = useTask();\r\n  const globals = useGlobals();\r\n\r\n  function selectClassName() {\r\n    let className = \"tag is-light \";\r\n\r\n    if (\r\n      new Date(task.dueDate).getTime() <\r\n      new Date(moment(new Date()).subtract(1, \"days\")).getTime()\r\n    ) {\r\n      className += \"is-danger\";\r\n    } else if (new Date(task.dueDate).getTime() < new Date().getTime()) {\r\n      className += \"is-warning\";\r\n    } else {\r\n      className += \"is-success\";\r\n    }\r\n    return className;\r\n  }\r\n\r\n  function handleTaskClick() {\r\n    globals.activateTaskDetailModal(task);\r\n  }\r\n\r\n  const style = {\r\n    paddingTop: \"0.25em\",\r\n    paddinBottom: \"0.25em\",\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className=\"columns p-0 m-0 is-mobile\">\r\n        <div\r\n          className=\"column is-narrow is-flex is-justify-content-center\"\r\n          style={style}\r\n        >\r\n          <span\r\n            className=\"icon is-align-self-center\"\r\n            onClick={() => store.changeTaskStatus(task.id, !task.completed)}\r\n          >\r\n            {task.completed ? (\r\n              <i className=\"fas fa-check-circle\"></i>\r\n            ) : (\r\n              <i className=\"far fa-circle\"></i>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <div\r\n          className=\"column is-flex is-clickable\"\r\n          onClick={() => handleTaskClick()}\r\n          style={style}\r\n        >\r\n          <span className=\"is-align-self-center\">\r\n            {task.title}\r\n            <br />\r\n\r\n            {new Date(task.dueDate).getTime() !==\r\n              new Date(defaultDueDate).getTime() && (\r\n              <span className=\"tags\">\r\n                <span className={selectClassName()}>\r\n                  {moment(task.dueDate).calendar()}\r\n                </span>\r\n              </span>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <div className=\"column is-narrow is-flex\" style={style}>\r\n          <div className=\"is-align-self-center\"></div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"column is-narrow is-flex\"\r\n          onClick={async () => await store.deleteTask(task.id)}\r\n          style={style}\r\n        >\r\n          <button className=\"delete is-align-self-center\"></button>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TaskRow;\r\n","import moment from \"moment\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { selectPriority } from \"./constants\";\r\nimport { useTask } from \"./services/useTask\";\r\nimport TaskRow from \"./components/TaskRow\";\r\n\r\nfunction TaskList() {\r\n  const store = useTask();\r\n  const [taskTable, setTaskTable] = useState(<></>);\r\n\r\n  useEffect(() => {\r\n    if (store.currentProject) {\r\n      const _taskTable =\r\n        store.currentProject.toString() === \"1\"\r\n          ? mapTaskByDueDate(store.tasks)\r\n          : mapTasksbyPriority(store.tasks);\r\n      setTaskTable(_taskTable);\r\n    }\r\n    return () => {};\r\n  }, [store.tasks, store.currentProject]);\r\n\r\n  return <div>{taskTable}</div>;\r\n}\r\n\r\nfunction mapTasksbyPriority(taskList) {\r\n  const _selectPriority = [...selectPriority];\r\n\r\n  const priorityList = _selectPriority\r\n    .sort((p1, p2) => p2.value - p1.value)\r\n    .map((priority) => {\r\n      return { ...priority, tasks: [] };\r\n    });\r\n  const tasks = taskList.sort((p1, p2) => {\r\n    return new Date(p1.dueDate).getTime() - new Date(p2.dueDate).getTime();\r\n  });\r\n  for (let i = 0; i < tasks.length; i++) {\r\n    const task = tasks[i];\r\n    let index = priorityList.length - 1;\r\n\r\n    // find out at which index out task is goinf to go into\r\n    for (let p = 0; p < priorityList.length; p++) {\r\n      const priority = priorityList[p];\r\n      // console.log(priority.value, task.priority);\r\n      if (parseInt(priority.value) === parseInt(task.priority)) {\r\n        index = p;\r\n        break;\r\n      }\r\n    }\r\n    // assign task to that index\r\n    priorityList[index].tasks.push(task);\r\n  }\r\n\r\n  return mapTaskTable(priorityList);\r\n}\r\n\r\nfunction mapTaskByDueDate(taskList) {\r\n  const sortOrder = [];\r\n  for (let i = 1; i < 30; i++) {\r\n    let taskListObj = {\r\n      display_name: moment(new Date()).add(i, \"days\").format(\"MMMM Do\"),\r\n      key: i,\r\n      tasks: [],\r\n    };\r\n    const startDate = new Date(\r\n      moment(new Date().setHours(0, 0, 0, 0)).add(i - 1, \"days\")\r\n    ).getTime();\r\n    const endDate = new Date(\r\n      moment(new Date().setHours(0, 0, 0, 0)).add(i, \"days\")\r\n    ).getTime();\r\n    taskListObj.tasks = taskList.filter((task) => {\r\n      const dueDate = new Date(task.dueDate).getTime();\r\n      return dueDate > startDate && dueDate < endDate;\r\n    });\r\n    sortOrder.push(taskListObj);\r\n  }\r\n  return mapTaskTable(sortOrder);\r\n}\r\n\r\nfunction mapTaskTable(organizedTaskLists) {\r\n  const TaskTable = [];\r\n  organizedTaskLists.forEach((separator) => {\r\n    if (separator.tasks.length > 0) {\r\n      const element = (\r\n        <table\r\n          className=\"table is-fullwidth is-hoverable m-0 p-0\"\r\n          key={separator.key}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>{separator.display_name}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {separator.tasks.map((task) => {\r\n              return <TaskRow task={task} key={task.id} />;\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      );\r\n\r\n      TaskTable.push(element);\r\n    }\r\n  });\r\n\r\n  return TaskTable;\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport * as constants from \"./../constants\";\r\n\r\nconst DateAndTimeSelector = ({ dateTime, setDateTime }) => {\r\n  const [activated, setActivated] = useState(false);\r\n  const [tempDateTime, setTempDateTime] = useState(dateTime);\r\n\r\n  function handleDateChange(e) {\r\n    setTempDateTime(new Date(new Date(e.target.value).setHours(9, 0, 0, 0)));\r\n  }\r\n\r\n  function handleTimeChange(e) {\r\n    const timeDetail = e.target.value.toString().split(\":\");\r\n    setTempDateTime(\r\n      new Date(new Date(tempDateTime).setHours(timeDetail[0], timeDetail[1]))\r\n    );\r\n  }\r\n\r\n  function handleActivation() {\r\n    setActivated(true);\r\n    setTempDateTime(new Date());\r\n  }\r\n\r\n  function handleCancelClick() {\r\n    setTempDateTime(dateTime);\r\n    setActivated(false);\r\n  }\r\n\r\n  function handleSaveClick() {\r\n    setActivated(false);\r\n    setDateTime(tempDateTime);\r\n  }\r\n\r\n  return activated ? (\r\n    <div className=\"field is-horizontal\">\r\n      <div className=\"field-body\">\r\n        <div className=\"field\">\r\n          <p className=\"control \">\r\n            <input\r\n              className=\"input\"\r\n              type=\"date\"\r\n              value={moment(tempDateTime).format(\"yyyy-MM-DD\")}\r\n              onChange={(e) => handleDateChange(e)}\r\n            />\r\n          </p>\r\n        </div>\r\n        <div className=\"field\">\r\n          <p className=\"control\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"time\"\r\n              value={moment(tempDateTime).format(\"HH:mm\")}\r\n              onChange={(e) => handleTimeChange(e)}\r\n            />\r\n          </p>\r\n        </div>\r\n        <div className=\"field\">\r\n          <div\r\n            className=\"button is-outlined is-success is-light\"\r\n            onClick={() => handleSaveClick()}\r\n          >\r\n            Save\r\n          </div>\r\n          <div\r\n            className=\"button is-outlined is-link is-light\"\r\n            onClick={() => handleCancelClick()}\r\n          >\r\n            Cancel\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div onClick={() => handleActivation()}>\r\n      <div className=\"button is-outlined is-light is-link\">\r\n        {new Date(dateTime).getTime() !==\r\n        new Date(constants.defaultDueDate).getTime() ? (\r\n          <span>{moment(dateTime).calendar()}</span>\r\n        ) : (\r\n          <span>\r\n            <span className=\"icon\">\r\n              <i className=\"far fa-clock\"></i>\r\n            </span>\r\n            <span>Schedule</span>\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateAndTimeSelector;\r\n","import React from \"react\";\r\n\r\nconst FormButtons = ({\r\n  button1Click,\r\n  button1Text = \"Done\",\r\n  button2Click,\r\n  button2Text = \"Cancel\",\r\n}) => {\r\n  return (\r\n    <div className=\"field is-grouped\">\r\n      <div className=\"control\">\r\n        <button\r\n          className=\"button is-success is-light is-outlined\"\r\n          onClick={async () => await button1Click()}\r\n        >\r\n          {button1Text}\r\n        </button>\r\n      </div>\r\n      <div className=\"control\">\r\n        <button\r\n          className=\"button is-link is-light is-outlined\"\r\n          onClick={() => button2Click()}\r\n        >\r\n          {button2Text}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormButtons;\r\n","import React from \"react\";\r\n\r\nconst DropDown = ({ initialValue, handleValueChange, dropDownOptions }) => {\r\n  return (\r\n    <div className=\"control\">\r\n      <div className=\"select\">\r\n        <select\r\n          onChange={(e) => handleValueChange(e.target.value)}\r\n          value={initialValue}\r\n        >\r\n          {dropDownOptions.map((priority) => {\r\n            return (\r\n              <option key={priority.value} value={priority.value}>\r\n                {priority.priority}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useState } from \"react\";\r\nimport { useTask } from \"./services/useTask\";\r\nimport * as constants from \"./constants\";\r\nimport DateAndTimeSelector from \"./components/DateAndTimeSelector\";\r\nimport FormButtons from \"./components/FormButtons\";\r\n// import PriorityTags from \"./components/PriorityTags\";\r\nimport DropDown from \"./components/DropDown\";\r\n\r\nconst TaskForm = () => {\r\n  const store = useTask();\r\n\r\n  const [activated, setActivated] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(constants.defaultDueDate);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [priority, setPriority] = useState(constants.selectPriority[0].value);\r\n\r\n  async function addTask() {\r\n    if (validateInput()) {\r\n      const newTask = {\r\n        title: title,\r\n        description: description,\r\n        completed: false,\r\n        dueDate: dueDate,\r\n        priority: priority,\r\n      };\r\n      await store.addTask(newTask);\r\n      setActivated(false);\r\n      resetForm();\r\n    }\r\n  }\r\n\r\n  function handleFormClose() {\r\n    resetForm();\r\n    setActivated(false);\r\n  }\r\n\r\n  function resetForm() {\r\n    setTitle(\"\");\r\n    setDueDate(constants.defaultDueDate);\r\n    setTitleError(\"\");\r\n    setPriority(constants.selectPriority[0].value);\r\n    setDescription(\"\");\r\n  }\r\n\r\n  function validateInput() {\r\n    let result = true;\r\n    if (title.trim() === \"\") {\r\n      result = false;\r\n      setTitleError(\"Task title cannot be empty\");\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function setDateTime(dateTime) {\r\n    setDueDate(dateTime);\r\n  }\r\n\r\n  function handleTaskPriority(priority) {\r\n    console.log(priority);\r\n    setPriority(priority);\r\n  }\r\n\r\n  return activated ? (\r\n    <div className=\"block\">\r\n      <div className=\"p-2 border-gray-light\">\r\n        <div className=\"field\">\r\n          <div className=\"control has-icons-left has-icons-right\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"Bring milk and sweets\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              onFocus={() => setTitleError(\"\")}\r\n            />\r\n            <span className=\"icon is-small is-left\">\r\n              <i className=\"fas fa-tasks\"></i>\r\n            </span>\r\n            <span className=\"icon is-small is-right\">\r\n              <i className=\"fas fa-check\"></i>\r\n            </span>\r\n          </div>\r\n          <p className=\"help is-danger\">{titleError}</p>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <textarea\r\n            className=\"textarea has-fixed-size\"\r\n            placeholder=\"Enter the task description here\"\r\n            rows=\"2\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"field columns is-justify-content-space-between\">\r\n          <div className=\"column is-narrow pb-0\">\r\n            <DropDown\r\n              initialValue={priority}\r\n              handleValueChange={handleTaskPriority}\r\n              dropDownOptions={constants.selectPriority}\r\n            />\r\n            {/* <PriorityTags priority={priority} setPriority={setPriority} /> */}\r\n          </div>\r\n          <div className=\"column is-narrow\">\r\n            <DateAndTimeSelector dateTime={dueDate} setDateTime={setDateTime} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"p-1\">\r\n        <FormButtons\r\n          button1Click={addTask}\r\n          button1Text={\"Add Task\"}\r\n          button2Click={handleFormClose}\r\n          button2Text={\"Cancel\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <div className=\"control pl-4\">\r\n        <button\r\n          className=\"button is-outlined is-success is-light is-fullwidth\"\r\n          onClick={() => setActivated(true)}\r\n        >\r\n          Add Task\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useState } from \"react\";\r\nimport { useTask } from \"../services/useTask\";\r\n\r\nconst ProjectForm = ({ setActivated }) => {\r\n  const store = useTask();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(\"\");\r\n\r\n  function handleCloseForm() {\r\n    setTitle(\"\");\r\n    setTitleError(\"\");\r\n    setActivated(false);\r\n  }\r\n\r\n  async function handleAddProject() {\r\n    if (validateInput()) {\r\n      await store.addProject(title);\r\n      setActivated(false);\r\n    }\r\n  }\r\n\r\n  function validateInput() {\r\n    let result = true;\r\n    if (title.trim() === \"\") {\r\n      result = false;\r\n      setTitleError(\"project must have a name\");\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"field\">\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          onFocus={() => setTitleError(\"\")}\r\n        />\r\n        <p className=\"help is-danger\">{titleError}</p>\r\n      </div>\r\n      <div className=\"field is-grouped\">\r\n        <div className=\"control\">\r\n          <div\r\n            className=\"button is-success is-light\"\r\n            onClick={async () => await handleAddProject()}\r\n          >\r\n            Add Project\r\n          </div>\r\n        </div>\r\n        <div className=\"control\" onClick={() => handleCloseForm()}>\r\n          <div className=\"button is-light is-info\">Cancel</div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React from \"react\";\r\nimport { useTask } from \"../services/useTask\";\r\n\r\nconst DefaultProjectList = () => {\r\n  const store = useTask();\r\n  const todaysProject = {\r\n    title: \"Today\",\r\n    id: \"0\",\r\n  };\r\n  const upcomingProject = {\r\n    title: \"Upcoming\",\r\n    id: \"1\",\r\n  };\r\n\r\n  const projects = [...store.defaultProjects, todaysProject, upcomingProject];\r\n\r\n  function handleProjectClick(projectId) {\r\n    store.changeCurrentProject(projectId);\r\n  }\r\n\r\n  return (\r\n    <table className=\"table is-hoverable is-fullwidth\">\r\n      <tbody>\r\n        {projects.map((project) => {\r\n          return (\r\n            <tr\r\n              key={project.id}\r\n              className={\r\n                project.id === store.currentProject\r\n                  ? \"is-selected is-clickable\"\r\n                  : \"is-clickable\"\r\n              }\r\n              onClick={async () => handleProjectClick(project.id)}\r\n            >\r\n              <td>{project.title}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default DefaultProjectList;\r\n","import React, { useState } from \"react\";\r\nimport ProjectForm from \"./components/ProjectForm\";\r\nimport { useTask } from \"./services/useTask\";\r\nimport DefaultProjectList from \"./components/DefaultProjectList\";\r\n\r\nfunction ProjectList() {\r\n  const store = useTask();\r\n  const [activated, setActivated] = useState(false);\r\n\r\n  async function handleChangeProject(projectId) {\r\n    await store.changeCurrentProject(projectId);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DefaultProjectList />\r\n      <table className=\"table is-hoverable is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>Projects</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {store.projects.map((project) => {\r\n            return (\r\n              <tr\r\n                key={project.id}\r\n                className={\r\n                  project.id === store.currentProject\r\n                    ? \"is-selected is-clickable\"\r\n                    : \"is-clickable\"\r\n                }\r\n                onClick={async () => await handleChangeProject(project.id)}\r\n              >\r\n                <td>{project.title}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        {activated ? (\r\n          <ProjectForm setActivated={setActivated} />\r\n        ) : (\r\n          <div\r\n            className=\"button is-light is-success is-outlined is-fullwidth\"\r\n            onClick={() => setActivated(!activated)}\r\n          >\r\n            Add Project\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n","import { Helmet } from \"react-helmet\";\r\nimport React from \"react\";\r\n\r\nconst Seo = () => {\r\n  const title = \"Karma\";\r\n  const description = \"A TODO App\";\r\n  //const keywords = [\"karma\", \"todo\", \"react\", \"app\", \"SPA\"];\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <script\r\n        src=\"https://kit.fontawesome.com/cf77766bad.js\"\r\n        crossorigin=\"anonymous\"\r\n      ></script>\r\n    </Helmet>\r\n  );\r\n};\r\nexport default Seo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useGlobals } from \"../services/useGlobals\";\r\nimport DropDown from \"./DropDown\";\r\nimport DateAndTimeSelector from \"./DateAndTimeSelector\";\r\nimport * as constants from \"./../constants\";\r\nimport FormButtons from \"./FormButtons\";\r\nimport { useTask } from \"../services/useTask\";\r\nimport moment from \"moment\";\r\n\r\nconst TaskDetail = () => {\r\n  const globals = useGlobals();\r\n  const task = globals.detailTask;\r\n  const store = useTask();\r\n  // return prematurely if task is not defined\r\n\r\n  //form states\r\n  const [title, setTitle] = useState(task ? task.title : \"\");\r\n  const [description, setDescription] = useState(task ? task.description : \"\");\r\n  const [priority, setPriority] = useState(task ? task.priority : 1);\r\n  const [dueDate, setDueDate] = useState(task ? task.dueDate : null);\r\n  const [customDueDate, setCustomDueDate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (globals.detailTask) {\r\n      const task = globals.detailTask;\r\n\r\n      setTitle(task.title);\r\n      setDescription(task.description);\r\n      setPriority(task.priority);\r\n      setDueDate(task.dueDate);\r\n    }\r\n    return () => {};\r\n  }, [globals.detailTask]);\r\n\r\n  function handleTaskPriority(priority) {\r\n    setPriority(priority);\r\n  }\r\n\r\n  async function handleSubmit() {\r\n    if (task) {\r\n      const newTask = {\r\n        title: title,\r\n        description: description,\r\n        dueDate: dueDate,\r\n        completed: false,\r\n        priority: priority,\r\n      };\r\n      await store.updateTask(task.id, newTask);\r\n    }\r\n    globals.deactivateTaskDetailModal();\r\n  }\r\n\r\n  function handleCancel() {\r\n    globals.deactivateTaskDetailModal();\r\n  }\r\n\r\n  return (\r\n    <div className={globals.taskDetailActivated ? \"modal is-active\" : \"modal\"}>\r\n      <div className=\"modal-background\" onClick={() => handleCancel()}></div>\r\n      {task && (\r\n        <div className=\"modal-content has-background-white-bis has-text-black-bis\">\r\n          <div className=\"section\">\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                <span className=\"icon\">\r\n                  <i className=\"fas fa-tasks\"></i>\r\n                </span>\r\n                <span>Task Title</span>\r\n              </label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Do Laundry\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </div>\r\n              <p className=\"help is-danger\"></p>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                <span className=\"icon\">\r\n                  <i className=\"fas fa-align-left\"></i>\r\n                </span>\r\n                <span>Task Description</span>\r\n              </label>\r\n              <div className=\"control\">\r\n                <textarea\r\n                  className=\"textarea\"\r\n                  placeholder=\"what are the steps to do laundry??? i need to google bro...\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <strong>Due Date : </strong> {moment(dueDate).calendar()}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field is-grouped\">\r\n              <DropDown\r\n                handleValueChange={handleTaskPriority}\r\n                initialValue={priority}\r\n                dropDownOptions={constants.selectPriority}\r\n              />\r\n              {!customDueDate ? (\r\n                <div className=\"field\">\r\n                  <div className=\"control\">\r\n                    <div\r\n                      className=\"button is-outlined is-info is-light\"\r\n                      onClick={() => setCustomDueDate(!customDueDate)}\r\n                    >\r\n                      Custom due date\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <DateAndTimeSelector\r\n                  dateTime={dueDate}\r\n                  setDateTime={setDueDate}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <FormButtons\r\n              button1Text={\"Update Task\"}\r\n              button2Text={\"Cancel\"}\r\n              button1Click={handleSubmit}\r\n              button2Click={handleCancel}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React from \"react\";\r\nimport \"./services/firebase\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { TaskContextProvider } from \"./services/useTask\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport Seo from \"./services/Seo\";\r\nimport TaskDetail from \"./components/TaskDetail\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Seo />\r\n      <div>\r\n        <Navbar />\r\n      </div>\r\n      <section className=\"section has-text-light\">\r\n        <TaskContextProvider>\r\n          <TaskDetail />\r\n          <div\r\n            className=\"columns container\"\r\n            style={{ marginLeft: \"auto\", marginRight: \"auto\" }}\r\n          >\r\n            <div className=\"column is-one-fifth\">\r\n              <ProjectList />\r\n            </div>\r\n            <div className=\"column\">\r\n              <div className=\"block\">\r\n                <TaskList />\r\n              </div>\r\n              <div className=\"block\">\r\n                <TaskForm />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TaskContextProvider>\r\n      </section>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport { AuthContextProvider } from \"./services/useAuth\";\r\nimport { GlobalContextProvider } from \"./services/useGlobals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalContextProvider>\r\n      <AuthContextProvider>\r\n        <App />\r\n      </AuthContextProvider>\r\n    </GlobalContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}