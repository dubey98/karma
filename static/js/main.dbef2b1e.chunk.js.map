{"version":3,"sources":["config/firebase.config.js","services/useGlobals.js","Constants/constants.js","services/firebase.js","services/useAuth.js","components/NavbarUserDropDown.jsx","components/Navbar.jsx","Constants/gFunctions.js","services/useTask.js","components/TaskRow.js","components/TaskList.jsx","components/DateAndTimeSelector.js","components/FormButtons.js","components/DropDown.js","components/TaskForm.jsx","components/ProjectForm.js","components/DefaultProjectList.js","components/ProjectList.js","services/Seo.js","components/TaskDetail.js","components/HomePage.js","components/Toggler.jsx","components/Settings.jsx","App.jsx","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","glbalContext","createContext","useGlobals","useContext","GlobalContextProvider","children","global","isMobile","useMediaQuery","query","useState","taskDetailActivated","setTaskDetailActivated","showArchived","setShowArchived","showCompleted","setShowCompleted","detailTask","setDetailTask","sideBarStatus","setSideBarStatus","activateTaskDetailModal","task","deactivateTaskDetailModal","handleSideBarStatus","status","useEffect","useGlobalProvider","Provider","value","defaultDueDate","tagCategory","selectPriority","priority","display_name","key","defaultProjectIds","defaultProjectDetails","title","description","archived","defaultProjects","id","db","getFirestore","checkIfUserExists","userId","a","result","q","doc","getDoc","exists","addUser","user","newUser","displayName","email","photoURL","emailVerified","uid","setDoc","console","log","createDefaultProject","_project","gC","timestamp","serverTimestamp","addDoc","collection","updateDoc","defaultProjectId","authContext","useAuth","AuthContextProvider","auth","setUser","getAuth","signIn","provider","GoogleAuthProvider","signInWithPopup","then","credential","credentialFromResult","token","accessToken","_user","_setUpFIrstTimeUser","catch","error","errorCode","code","errorMessage","message","credentialFromError","signOut","firebase","currentUser","onAuthStateChanged","useAuthProvider","NavbarUserDropDown","profileDropdown","useRef","profileDropDownIcon","toggleMenu","current","classList","toggle","className","style","marginLeft","ref","onMouseEnter","add","onMouseLeave","remove","to","src","alt","onClick","Navbar","burgerMenu","globals","role","getNextDayTimeStamp","Date","moment","setHours","getTime","getPrevDayTimeStamp","taskContext","useTask","TaskContextProvider","reloadDelay","projects","setProjects","currentProject","setCurrentProject","tasks","setTasks","reloadTaskFlag","setReloadTaskFlag","reloadProjects","setReloadProjects","setDefaultProjects","reloadDefaultTasks","setReloadDefaultTasks","setDefaultProjectId","addTask","_newTask","dueDate","project","forEach","pId","toString","trim","taskRef","newTask","updateTask","taskId","updatedTask","deleteTask","merge","addProject","projectRef","newProject","deleteProject","data","updateProject","updatedProject","updateRef","changeCurrentProject","changeTaskStatus","completed","timer","getProjects","fs","defaultProjectQuery","snap","_defaultProjectId","where","getDocs","_projects","_defaultProjects","push","setTimeout","clearInterval","_getTasks","find","_tasks","_task","toDate","collectionGroup","gF","useTaskProvider","TaskRow","store","paddingTop","paddinBottom","subtract","selectClassName","calendar","mapTaskTable","organizedTaskLists","TaskTable","separator","length","element","map","TaskList","taskTable","setTaskTable","_taskTable","taskList","sortOrder","i","taskListObj","format","startDate","endDate","filter","mapTaskByDueDate","priorityList","sort","p1","p2","index","p","parseInt","mapTasksbyPriority","DateAndTimeSelector","dateTime","setDateTime","activated","setActivated","tempDateTime","setTempDateTime","type","onChange","e","target","handleDateChange","timeDetail","split","handleTimeChange","constants","FormButtons","button1Click","button1Text","button2Click","button2Text","DropDown","initialValue","handleValueChange","dropDownOptions","TaskForm","setTitle","titleError","setTitleError","setDueDate","setDescription","setPriority","tagList","setTagList","validateInput","resetForm","handleTitleChange","input","tempTagList","r_today","r_tomorrow","category","test","tag","handleTagDelete","text","processText","tagId","findIndex","splice","placeholder","onFocus","rows","ProjectForm","handleAddProject","name","DefaultProjectList","handleProjectClick","ProjectList","handleChangeProject","Seo","Helmet","content","crossorigin","TaskDetail","customDueDate","setCustomDueDate","handleCancel","HomePage","HomePageFront","justifyContent","Toggler","togglerOn","setTogglerOn","Settings","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbef2b1e.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB7UTq-y1DjPb0UuNJ83ZLnE81Ht405OQI\",\r\n  authDomain: \"todo-karma.firebaseapp.com\",\r\n  projectId: \"todo-karma\",\r\n  storageBucket: \"todo-karma.appspot.com\",\r\n  messagingSenderId: \"757248016606\",\r\n  appId: \"1:757248016606:web:60058f2edc4c08c1b5824f\",\r\n  measurementId: \"G-07LN1JMQ97\",\r\n};\r\n\r\n// Initialize Firebase\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const analytics = getAnalytics(app);\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst glbalContext = createContext();\r\n\r\nexport function useGlobals() {\r\n  return useContext(glbalContext);\r\n}\r\n\r\nexport function GlobalContextProvider({ children }) {\r\n  const global = useGlobalProvider();\r\n  return (\r\n    <glbalContext.Provider value={global}>{children}</glbalContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useGlobalProvider() {\r\n  const isMobile = useMediaQuery({\r\n    query: \"(max-width: 1023px)\",\r\n  });\r\n\r\n  const [taskDetailActivated, setTaskDetailActivated] = useState(false);\r\n  const [showArchived, setShowArchived] = useState(false);\r\n  const [showCompleted, setShowCompleted] = useState(false);\r\n  const [detailTask, setDetailTask] = useState(null);\r\n  const [sideBarStatus, setSideBarStatus] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      setSideBarStatus(true);\r\n    } else {\r\n      setSideBarStatus(false);\r\n    }\r\n  }, [isMobile]);\r\n\r\n  function activateTaskDetailModal(task) {\r\n    setTaskDetailActivated(true);\r\n    setDetailTask(task);\r\n  }\r\n\r\n  function deactivateTaskDetailModal() {\r\n    setDetailTask(null);\r\n    setTaskDetailActivated(false);\r\n  }\r\n\r\n  function handleSideBarStatus(status) {\r\n    setSideBarStatus(status);\r\n  }\r\n\r\n  return {\r\n    isMobile,\r\n    taskDetailActivated,\r\n    detailTask,\r\n    showArchived,\r\n    showCompleted,\r\n    sideBarStatus,\r\n    activateTaskDetailModal,\r\n    deactivateTaskDetailModal,\r\n    setShowCompleted,\r\n    setShowArchived,\r\n    handleSideBarStatus,\r\n  };\r\n}\r\n","export const defaultDueDate = \"1970-01-01T00:00:00.000Z\";\r\nexport const tagCategory = {\r\n  datetime: \"datetime\",\r\n  projects: \"projects\",\r\n};\r\n\r\nexport const selectPriority = [\r\n  {\r\n    priority: \"select priority\",\r\n    value: 1,\r\n    display_name: \"For later\",\r\n    key: 1,\r\n  },\r\n  {\r\n    priority: \"p5 Urgent\",\r\n    value: 5,\r\n    display_name: \"Urgent tasks\",\r\n    key: 2,\r\n  },\r\n  {\r\n    priority: \"p4 High\",\r\n    value: 4,\r\n    display_name: \"High priority tasks\",\r\n    key: 3,\r\n  },\r\n  {\r\n    priority: \"p3 Medium\",\r\n    value: 3,\r\n    display_name: \"Medium priority tasks\",\r\n    key: 4,\r\n  },\r\n  {\r\n    priority: \"p2 Low\",\r\n    value: 2,\r\n    display_name: \"Low priority tasks \",\r\n    key: 5,\r\n  },\r\n];\r\n\r\nexport const defaultProjectIds = [\"0\", \"1\"];\r\n\r\nexport const defaultProjectDetails = {\r\n  title: \"INBOX\",\r\n  description: \"A default project for all your tasks\",\r\n  archived: false,\r\n};\r\n\r\nexport const defaultProjects = [\r\n  {\r\n    title: \"Today\",\r\n    id: \"0\",\r\n  },\r\n  {\r\n    title: \"Upcoming\",\r\n    id: \"1\",\r\n  },\r\n];\r\n","import {\r\n  getFirestore,\r\n  collection,\r\n  getDoc,\r\n  query,\r\n  doc,\r\n  setDoc,\r\n  serverTimestamp,\r\n  addDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport * as gC from \"./../Constants/constants\";\r\n\r\nconst db = getFirestore();\r\n\r\nasync function checkIfUserExists(userId) {\r\n  let result = false;\r\n  if (userId !== \"\") {\r\n    const q = query(doc(db, \"users\", userId));\r\n    const snapShot = await getDoc(q);\r\n    if (snapShot.exists()) {\r\n      result = true;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nasync function addUser(user) {\r\n  if (user !== null) {\r\n    const newUser = {\r\n      displayName: user.displayName,\r\n      email: user.email,\r\n      photoURL: user.photoURL,\r\n      emailVerified: user.emailVerified,\r\n    };\r\n    const uid = user.uid;\r\n\r\n    const result = await setDoc(doc(db, \"users\", uid), {\r\n      ...newUser,\r\n    });\r\n    console.log(result);\r\n  }\r\n}\r\n\r\nasync function createDefaultProject(userId) {\r\n  if (userId !== null) {\r\n    const _project = {\r\n      ...gC.defaultProjectDetails,\r\n      timestamp: serverTimestamp(),\r\n      uid: userId,\r\n    };\r\n    const result = await addDoc(collection(db, \"projects\"), {\r\n      ..._project,\r\n    });\r\n    await updateDoc(doc(db, \"users\", userId), {\r\n      defaultProjectId: result.id,\r\n    });\r\n  }\r\n}\r\n\r\nexport { checkIfUserExists, addUser, createDefaultProject };\r\n","import React, { createContext, useContext, useState } from \"react\";\r\nimport * as firebase from \"./firebase\";\r\nimport {\r\n  getAuth,\r\n  onAuthStateChanged,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\n\r\nconst authContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(authContext);\r\n}\r\n\r\nexport function AuthContextProvider({ children }) {\r\n  const auth = useAuthProvider();\r\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\nfunction useAuthProvider() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const auth = getAuth();\r\n\r\n  onAuthStateChanged(auth, (_user) => {\r\n    if (_user) {\r\n      setUser(_user);\r\n    } else {\r\n      setUser(null);\r\n    }\r\n  });\r\n\r\n  async function signIn() {\r\n    const provider = new GoogleAuthProvider();\r\n    signInWithPopup(auth, provider)\r\n      .then(async (result) => {\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        const token = credential.accessToken;\r\n        const _user = result.user;\r\n        setUser(_user);\r\n        await _setUpFIrstTimeUser(_user.uid);\r\n\r\n        console.log({ credential, token, _user });\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        const email = error.email;\r\n        // The AuthCredential type that was used.\r\n        const credential = GoogleAuthProvider.credentialFromError(error);\r\n\r\n        console.log(\"signing in\", {\r\n          errorCode,\r\n          errorMessage,\r\n          email,\r\n          credential,\r\n        });\r\n      });\r\n  }\r\n\r\n  async function signOut() {\r\n    await auth.signOut();\r\n    setUser(null);\r\n  }\r\n\r\n  async function _setUpFIrstTimeUser(userId) {\r\n    const userExists = await firebase.checkIfUserExists(userId);\r\n    if (!userExists) {\r\n      const user = auth.currentUser;\r\n      await firebase.addUser(user);\r\n      await firebase.createDefaultProject(user.uid);\r\n    }\r\n  }\r\n\r\n  return {\r\n    user,\r\n    signIn,\r\n    signOut,\r\n  };\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { useAuth } from \"../services/useAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavbarUserDropDown = () => {\r\n  const auth = useAuth();\r\n  const profileDropdown = useRef(null);\r\n  const profileDropDownIcon = useRef(null);\r\n\r\n  function toggleMenu() {\r\n    if (profileDropDownIcon && profileDropDownIcon.current) {\r\n      profileDropDownIcon.current.classList.toggle(\"is-active\");\r\n    }\r\n  }\r\n\r\n  function handleMouseEnter() {\r\n    if (profileDropdown && profileDropdown.current) {\r\n      profileDropdown.current.classList.add(\"is-block\");\r\n    }\r\n  }\r\n\r\n  function handleMouseLeave() {\r\n    if (profileDropdown && profileDropdown.current) {\r\n      profileDropdown.current.classList.remove(\"is-block\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar-item burger-right\" style={{ marginLeft: \"auto\" }}>\r\n      {auth.user ? (\r\n        <div className=\"buttons\">\r\n          <div\r\n            className=\"navbar-item has-dropdown\"\r\n            ref={profileDropDownIcon}\r\n            onMouseEnter={() => handleMouseEnter()}\r\n            onMouseLeave={() => handleMouseLeave()}\r\n          >\r\n            <Link to=\"/\" className=\"navbar-link is-arrowless\">\r\n              {auth.user.photoURL ? (\r\n                <figure className=\"image is-32x32\">\r\n                  <img\r\n                    className=\"is-rounded\"\r\n                    src={auth.user.photoURL}\r\n                    alt=\"user profile\"\r\n                  />\r\n                </figure>\r\n              ) : (\r\n                <span className=\"icon\">\r\n                  <i className=\"far fa-user\"></i>\r\n                </span>\r\n              )}\r\n            </Link>\r\n\r\n            <div\r\n              className=\"navbar-dropdown navbar-dropdown-persist is-right-extended\"\r\n              ref={profileDropdown}\r\n            >\r\n              <Link to=\"/\" className=\"navbar-item\">\r\n                Profile\r\n              </Link>\r\n              <Link to=\"/\" className=\"navbar-item\">\r\n                Settings\r\n              </Link>\r\n              <hr className=\"navbar-divider\" />\r\n              <Link\r\n                to=\"/\"\r\n                className=\"navbar-item is-selectable\"\r\n                onClick={async () => {\r\n                  await auth.signOut();\r\n                  toggleMenu();\r\n                }}\r\n              >\r\n                Log Out\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"buttons\">\r\n          <button\r\n            className=\"button has-background-success-light\"\r\n            onClick={async () => {\r\n              await auth.signIn();\r\n              toggleMenu();\r\n            }}\r\n          >\r\n            <strong>Sign up</strong>\r\n          </button>\r\n          <button\r\n            className=\"button has-background-success-light\"\r\n            onClick={async () => {\r\n              await auth.signIn();\r\n              toggleMenu();\r\n            }}\r\n          >\r\n            Log in\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarUserDropDown;\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useGlobals } from \"../services/useGlobals\";\r\nimport NavbarUserDropDown from \"./NavbarUserDropDown\";\r\n\r\nconst Navbar = () => {\r\n  const burgerMenu = useRef(null);\r\n  const globals = useGlobals();\r\n\r\n  function toggleBurgerMenu() {\r\n    if (burgerMenu !== null && burgerMenu.current) {\r\n      burgerMenu.current.classList.toggle(\"is-active\");\r\n    }\r\n    globals.handleSideBarStatus(!globals.sideBarStatus);\r\n  }\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar is-light has-background-success-light\"\r\n      role=\"navigation\"\r\n      aria-label=\"main navigation\"\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"navbar-brand\">\r\n          <button\r\n            className=\"burger-left has-text-weight-bold\"\r\n            aria-label=\"menu\"\r\n            aria-expanded=\"false\"\r\n            onClick={() => toggleBurgerMenu()}\r\n            data-target=\"navbarBasicExample\"\r\n            ref={burgerMenu}\r\n          >\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n            <span aria-hidden=\"true\"></span>\r\n          </button>\r\n\r\n          <Link className=\"navbar-item\" to=\"/\">\r\n            <span className=\"is-size-4 has-text-weight-semibold \">\r\n              <strong>KARMA</strong>\r\n            </span>\r\n          </Link>\r\n\r\n          {globals.isMobile && <NavbarUserDropDown />}\r\n        </div>\r\n\r\n        <div id=\"navbarMain\" className=\"navbar-menu\">\r\n          <div className=\"navbar-end\">\r\n            <NavbarUserDropDown />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import moment from \"moment\";\r\n\r\nfunction isNumeric(string) {\r\n  if (typeof string != \"string\") return false;\r\n  return !isNaN(string) && !isNaN(parseFloat(string));\r\n}\r\n\r\nfunction selectDateTime(dateTime, source, initialDateTime) {\r\n  let _date = null;\r\n  if (source === \"tags\") {\r\n    _date = new Date(dateTime).getTime();\r\n  } else if (source === \"date\") {\r\n    _date = new Date(dateTime);\r\n  } else if (source === \"time\") {\r\n    const timeFragment = dateTime.split(\":\");\r\n    _date = new Date(initialDateTime).setHours(\r\n      timeFragment[0],\r\n      timeFragment[1],\r\n      0,\r\n      0\r\n    );\r\n  } else {\r\n    _date = new Date(dateTime);\r\n  }\r\n  return _date;\r\n}\r\n\r\nfunction getNextDayTimeStamp() {\r\n  return new Date(\r\n    new Date(moment(new Date()).add(1, \"days\")).setHours(0, 0, 0, 0)\r\n  ).getTime();\r\n}\r\n\r\nfunction getPrevDayTimeStamp() {\r\n  return new Date(new Date().setHours(0, 0, 0, 0)).getTime();\r\n}\r\n\r\nexport { getNextDayTimeStamp, getPrevDayTimeStamp, selectDateTime, isNumeric };\r\n","import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getFirestore,\r\n  where,\r\n  query,\r\n  getDocs,\r\n  addDoc,\r\n  updateDoc,\r\n  setDoc,\r\n  serverTimestamp,\r\n  getDoc,\r\n  collectionGroup,\r\n} from \"firebase/firestore\";\r\nimport { useAuth } from \"./useAuth\";\r\nimport * as gC from \"../Constants/constants\";\r\nimport * as gF from \"./../Constants/gFunctions\";\r\nimport { useGlobals } from \"./useGlobals\";\r\n\r\nconst db = getFirestore();\r\n\r\nconst taskContext = createContext(null);\r\n\r\nexport function useTask() {\r\n  return useContext(taskContext);\r\n}\r\n\r\nexport function TaskContextProvider({ children }) {\r\n  const task = useTaskProvider();\r\n  return <taskContext.Provider value={task}>{children}</taskContext.Provider>;\r\n}\r\n\r\nconst fs = \":::::::::::::::::::Firestore fetch:::::::::::::::::::::\";\r\n\r\nfunction useTaskProvider() {\r\n  const reloadDelay = 1;\r\n\r\n  const auth = useAuth();\r\n  const globals = useGlobals();\r\n  const [projects, setProjects] = useState([]);\r\n  const [currentProject, setCurrentProject] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [reloadTaskFlag, setReloadTaskFlag] = useState(false);\r\n  const [reloadProjects, setReloadProjects] = useState(false);\r\n  const [defaultProjects, setDefaultProjects] = useState([]);\r\n  const [reloadDefaultTasks, setReloadDefaultTasks] = useState(false);\r\n  const [defaultProjectId, setDefaultProjectId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let timer = null;\r\n    async function getProjects() {\r\n      if (auth.user) {\r\n        console.log(fs, \"projects\");\r\n\r\n        const defaultProjectQuery = query(doc(db, \"users\", auth.user.uid));\r\n\r\n        let snap = await getDoc(defaultProjectQuery);\r\n        if (snap.exists()) {\r\n          const _defaultProjectId = snap.data().defaultProjectId;\r\n          setDefaultProjectId(_defaultProjectId);\r\n          const q = query(\r\n            collection(db, \"projects\"),\r\n            where(\"uid\", \"==\", auth.user.uid),\r\n            where(\"archived\", \"==\", false)\r\n          );\r\n          snap = await getDocs(q);\r\n\r\n          // set projects and current project\r\n          const _projects = [];\r\n          const _defaultProjects = [];\r\n          snap.forEach((value) => {\r\n            if (value.id === _defaultProjectId.trim()) {\r\n              // console.log(\"adding project to default ones\", value.id);\r\n              _defaultProjects.push({ ...value.data(), id: value.id });\r\n            } else {\r\n              //console.log(\"adding normal projects\", value.id);\r\n              _projects.push({ ...value.data(), id: value.id });\r\n            }\r\n          });\r\n          setCurrentProject(gC.defaultProjects[0]);\r\n          setProjects(_projects);\r\n          setDefaultProjects(_defaultProjects);\r\n        } else {\r\n          timer = setTimeout(\r\n            () => setReloadProjects(!reloadProjects),\r\n            reloadDelay * 1000\r\n          );\r\n        }\r\n      } else {\r\n        setProjects([]);\r\n        setDefaultProjects([]);\r\n        setCurrentProject(null);\r\n      }\r\n    }\r\n\r\n    getProjects();\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [auth.user, reloadProjects]);\r\n\r\n  useEffect(() => {\r\n    async function _getTasks() {\r\n      if (auth.user && currentProject) {\r\n        console.log(fs, \"tasks\");\r\n        if (\r\n          gC.defaultProjectIds.find(\r\n            (projectId) => currentProject.id === projectId\r\n          )\r\n        ) {\r\n          setTasks([]);\r\n          setReloadDefaultTasks((reloadDefaultTasks) => !reloadDefaultTasks);\r\n        } else {\r\n          const q = query(\r\n            collection(db, \"projects\", currentProject.id, \"tasks\"),\r\n            where(\"archived\", \"==\", globals.showArchived),\r\n            where(\"completed\", \"==\", globals.showCompleted)\r\n          );\r\n          const snap = await getDocs(q);\r\n\r\n          const _tasks = [];\r\n          snap.forEach((value) => {\r\n            const _task = { ...value.data(), id: value.id };\r\n            _task.dueDate = _task.dueDate.toDate();\r\n            _tasks.push(_task);\r\n          });\r\n\r\n          setTasks(_tasks);\r\n        }\r\n      } else {\r\n        setTasks([]);\r\n      }\r\n    }\r\n    _getTasks();\r\n\r\n    return () => {};\r\n  }, [\r\n    auth.user,\r\n    currentProject,\r\n    reloadTaskFlag,\r\n    globals.showCompleted,\r\n    globals.showArchived,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    async function _getTasks() {\r\n      if (gC.defaultProjectIds.find((pId) => pId === currentProject.id)) {\r\n        const q =\r\n          currentProject.id.toString() === \"0\"\r\n            ? query(\r\n                collectionGroup(db, \"tasks\"),\r\n                where(\"uid\", \"==\", auth.user.uid),\r\n                where(\"archived\", \"==\", false),\r\n                where(\"completed\", \"==\", false),\r\n                where(\"dueDate\", \">\", new Date(gF.getPrevDayTimeStamp())),\r\n                where(\"dueDate\", \"<\", new Date(gF.getNextDayTimeStamp()))\r\n              )\r\n            : query(\r\n                collectionGroup(db, \"tasks\"),\r\n                where(\"uid\", \"==\", auth.user.uid),\r\n                where(\"archived\", \"==\", false),\r\n                where(\"completed\", \"==\", false),\r\n                where(\"dueDate\", \">\", new Date(gF.getPrevDayTimeStamp()))\r\n              );\r\n\r\n        const _tasks = [];\r\n        const snapShot = await getDocs(q);\r\n        snapShot.forEach((value) => {\r\n          const _task = { ...value.data(), id: value.id };\r\n          _task.dueDate = _task.dueDate.toDate();\r\n          _tasks.push(_task);\r\n        });\r\n        setTasks(_tasks);\r\n      }\r\n    }\r\n\r\n    if (currentProject) {\r\n      _getTasks();\r\n    }\r\n\r\n    return () => {};\r\n  }, [auth.user, reloadDefaultTasks, currentProject]);\r\n\r\n  async function addTask(_newTask) {\r\n    if (auth.user && _newTask) {\r\n      _newTask.dueDate = new Date(_newTask.dueDate) || null;\r\n      _newTask.uid = auth.user.uid;\r\n      _newTask.archived = false;\r\n      let project = currentProject.id;\r\n      gC.defaultProjectIds.forEach((pId) => {\r\n        if (currentProject.id.toString().trim() === pId.toString().trim()) {\r\n          project = defaultProjectId;\r\n          _newTask.projectId = defaultProjectId;\r\n        }\r\n      });\r\n      _newTask.projectId = _newTask.projectId || currentProject.id;\r\n\r\n      const taskRef = collection(db, \"projects\", project, \"tasks\");\r\n\r\n      const newTask = await addDoc(taskRef, {\r\n        ..._newTask,\r\n      });\r\n      setReloadTaskFlag(!reloadTaskFlag);\r\n      return newTask.id;\r\n    }\r\n  }\r\n\r\n  async function updateTask(taskId, updatedTask) {\r\n    if (auth.user) {\r\n      const taskRef = doc(db, \"projects\", currentProject.id, \"tasks\", taskId);\r\n      await updateDoc(taskRef, {\r\n        ...updatedTask,\r\n        timestamp: serverTimestamp(),\r\n      });\r\n      setReloadTaskFlag(!reloadTaskFlag);\r\n    } else {\r\n      console.log(\"user not logged in\", \"update\");\r\n    }\r\n  }\r\n\r\n  async function deleteTask(task) {\r\n    if (auth.user && task) {\r\n      const taskRef = doc(\r\n        db,\r\n        \"projects\",\r\n        task.projectId || currentProject.id,\r\n        \"tasks\",\r\n        task.id\r\n      );\r\n      await setDoc(taskRef, { archived: true }, { merge: true });\r\n      setReloadTaskFlag(!reloadTaskFlag);\r\n    } else {\r\n      console.log(\"user not logged in \", \"delete \");\r\n    }\r\n  }\r\n\r\n  async function addProject(title, description = \"\") {\r\n    if (auth.user) {\r\n      const _project = {\r\n        title,\r\n        description,\r\n        timestamp: serverTimestamp(),\r\n        uid: auth.user.uid,\r\n        archived: false,\r\n      };\r\n      const projectRef = collection(db, \"projects\");\r\n      const newProject = await addDoc(projectRef, { ..._project });\r\n      setReloadProjects(!reloadProjects);\r\n      return newProject.id;\r\n    } else {\r\n      console.log(\"user not logged in\", \"project add \");\r\n    }\r\n  }\r\n\r\n  async function deleteProject(projectId) {\r\n    if (auth.user && projectId && projectId !== defaultProjectId) {\r\n      const projectRef = doc(db, \"projects\", projectId);\r\n      const q = query(collection(db, \"projects\", projectId, \"tasks\"));\r\n      const _tasksSnap = await getDoc(q);\r\n      _tasksSnap.forEach(async (value) => {\r\n        await updateDoc(doc(db, \"projects\", projectId, \"tasks\", value.id), {\r\n          ...value.data(),\r\n          archived: true,\r\n        });\r\n      });\r\n      const project = await getDoc(projectRef);\r\n      await updateDoc(projectRef, {\r\n        ...project,\r\n        archived: true,\r\n      });\r\n      setReloadProjects(!reloadProjects);\r\n      return;\r\n    } else {\r\n      console.log(\"user not logged in\", \"delete project \");\r\n    }\r\n  }\r\n\r\n  async function updateProject(updatedProject) {\r\n    if (auth.user) {\r\n      const projectRef = doc(db, \"projects\", currentProject.id);\r\n      const updateRef = await updateDoc(projectRef, {\r\n        ...updatedProject,\r\n        timestamp: serverTimestamp(),\r\n      });\r\n      setReloadProjects(!reloadProjects);\r\n      return updateRef.id;\r\n    } else {\r\n      console.log(\"user not logged in\", \"update project\");\r\n    }\r\n  }\r\n\r\n  async function changeCurrentProject(project) {\r\n    if (auth.user && project) {\r\n      setCurrentProject(project);\r\n    }\r\n  }\r\n\r\n  async function changeTaskStatus(task, status) {\r\n    if (auth.user && task) {\r\n      console.log(task);\r\n      const q = query(\r\n        doc(\r\n          db,\r\n          \"projects\",\r\n          task.projectId || currentProject.id,\r\n          \"tasks\",\r\n          task.id\r\n        )\r\n      );\r\n      await updateDoc(q, {\r\n        completed: status,\r\n      });\r\n      setReloadTaskFlag(!reloadTaskFlag);\r\n    }\r\n  }\r\n\r\n  return {\r\n    tasks,\r\n    projects,\r\n    currentProject,\r\n    defaultProjects,\r\n    // tasks\r\n    addTask,\r\n    updateTask,\r\n    deleteTask,\r\n    // projects\r\n    addProject,\r\n    deleteProject,\r\n    updateProject,\r\n    //other\r\n    changeCurrentProject,\r\n    changeTaskStatus,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { useTask } from \"../services/useTask\";\r\nimport { useGlobals } from \"../services/useGlobals\";\r\nimport moment from \"moment\";\r\nimport { defaultDueDate } from \"../Constants/constants\";\r\n\r\nfunction TaskRow({ task }) {\r\n  const store = useTask();\r\n  const globals = useGlobals();\r\n\r\n  function selectClassName() {\r\n    let className = \"tag is-light \";\r\n\r\n    if (\r\n      new Date(task.dueDate).getTime() <\r\n      new Date(moment(new Date()).subtract(1, \"days\")).getTime()\r\n    ) {\r\n      className += \"is-danger\";\r\n    } else if (new Date(task.dueDate).getTime() < new Date().getTime()) {\r\n      className += \"is-warning\";\r\n    } else {\r\n      className += \"is-success\";\r\n    }\r\n    return className;\r\n  }\r\n\r\n  function handleTaskClick() {\r\n    globals.activateTaskDetailModal(task);\r\n  }\r\n\r\n  const style = {\r\n    paddingTop: \"0.25em\",\r\n    paddinBottom: \"0.25em\",\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className=\"columns p-0 m-0 is-mobile\">\r\n        <button\r\n          className=\"column is-narrow is-flex is-justify-content-center remove-button-preset\"\r\n          style={style}\r\n        >\r\n          <span\r\n            className=\"icon is-align-self-center\"\r\n            onClick={() => store.changeTaskStatus(task, !task.completed)}\r\n          >\r\n            {task.completed ? (\r\n              <i className=\"fas fa-check-circle\"></i>\r\n            ) : (\r\n              <i className=\"far fa-circle\"></i>\r\n            )}\r\n          </span>\r\n        </button>\r\n        <div\r\n          className=\"column is-flex is-clickable\"\r\n          onClick={() => handleTaskClick()}\r\n          style={style}\r\n        >\r\n          <span className=\"is-align-self-center\">\r\n            {task.title}\r\n            <br />\r\n\r\n            {new Date(task.dueDate).getTime() !==\r\n              new Date(defaultDueDate).getTime() && (\r\n              <span className=\"tags\">\r\n                <span className={selectClassName()}>\r\n                  {moment(task.dueDate).calendar()}\r\n                </span>\r\n              </span>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <div className=\"column is-narrow is-flex\" style={style}>\r\n          <div className=\"is-align-self-center\"></div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"column is-narrow is-flex is-clickable  \"\r\n          onClick={async () => await store.deleteTask(task)}\r\n          style={style}\r\n        >\r\n          {globals.showArchived ? (\r\n            <span className=\"icon is-align-self-center\">\r\n              <i className=\"fas fa-archive\"></i>\r\n            </span>\r\n          ) : (\r\n            <span className=\"icon is-align-self-center\">\r\n              <i className=\"far fa-trash-alt\"></i>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TaskRow;\r\n","import moment from \"moment\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { selectPriority } from \"../Constants/constants\";\r\nimport { useTask } from \"../services/useTask\";\r\nimport TaskRow from \"./TaskRow\";\r\n\r\nfunction TaskList() {\r\n  const store = useTask();\r\n  const [taskTable, setTaskTable] = useState(<></>);\r\n\r\n  useEffect(() => {\r\n    if (store.currentProject) {\r\n      const _taskTable =\r\n        store.currentProject.id.toString() === \"1\"\r\n          ? mapTaskByDueDate(store.tasks)\r\n          : mapTasksbyPriority(store.tasks);\r\n      setTaskTable(_taskTable);\r\n    }\r\n    return () => {};\r\n  }, [store.tasks, store.currentProject]);\r\n\r\n  return <div>{taskTable}</div>;\r\n}\r\n\r\nfunction mapTasksbyPriority(taskList) {\r\n  const _selectPriority = [...selectPriority];\r\n\r\n  const priorityList = _selectPriority\r\n    .sort((p1, p2) => p2.value - p1.value)\r\n    .map((priority) => {\r\n      return { ...priority, tasks: [] };\r\n    });\r\n  const tasks = taskList.sort((p1, p2) => {\r\n    return new Date(p1.dueDate).getTime() - new Date(p2.dueDate).getTime();\r\n  });\r\n  for (let i = 0; i < tasks.length; i++) {\r\n    const task = tasks[i];\r\n    let index = priorityList.length - 1;\r\n\r\n    // find out at which index out task is goinf to go into\r\n    for (let p = 0; p < priorityList.length; p++) {\r\n      const priority = priorityList[p];\r\n      // console.log(priority.value, task.priority);\r\n      if (parseInt(priority.value) === parseInt(task.priority)) {\r\n        index = p;\r\n        break;\r\n      }\r\n    }\r\n    // assign task to that index\r\n    priorityList[index].tasks.push(task);\r\n  }\r\n\r\n  return mapTaskTable(priorityList);\r\n}\r\n\r\nfunction mapTaskByDueDate(taskList) {\r\n  const sortOrder = [];\r\n  for (let i = 1; i < 30; i++) {\r\n    let taskListObj = {\r\n      display_name: moment(new Date()).add(i, \"days\").format(\"MMMM Do\"),\r\n      key: i,\r\n      tasks: [],\r\n    };\r\n    const startDate = new Date(\r\n      moment(new Date().setHours(0, 0, 0, 0)).add(i - 1, \"days\")\r\n    ).getTime();\r\n    const endDate = new Date(\r\n      moment(new Date().setHours(0, 0, 0, 0)).add(i, \"days\")\r\n    ).getTime();\r\n    taskListObj.tasks = taskList.filter((task) => {\r\n      const dueDate = new Date(task.dueDate).getTime();\r\n      return dueDate > startDate && dueDate < endDate;\r\n    });\r\n    sortOrder.push(taskListObj);\r\n  }\r\n  return mapTaskTable(sortOrder);\r\n}\r\n\r\nfunction mapTaskTable(organizedTaskLists) {\r\n  const TaskTable = [];\r\n  organizedTaskLists.forEach((separator) => {\r\n    if (separator.tasks.length > 0) {\r\n      const element = (\r\n        <table\r\n          className=\"table is-fullwidth is-hoverable m-0 p-0\"\r\n          key={separator.key}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>{separator.display_name}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {separator.tasks.map((task) => {\r\n              return <TaskRow task={task} key={task.id} />;\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      );\r\n\r\n      TaskTable.push(element);\r\n    }\r\n  });\r\n\r\n  return TaskTable;\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport * as constants from \"../Constants/constants\";\r\n\r\nconst DateAndTimeSelector = ({ dateTime, setDateTime }) => {\r\n  const [activated, setActivated] = useState(false);\r\n  const [tempDateTime, setTempDateTime] = useState(dateTime);\r\n\r\n  function handleDateChange(e) {\r\n    setTempDateTime(new Date(new Date(e.target.value).setHours(9, 0, 0, 0)));\r\n  }\r\n\r\n  function handleTimeChange(e) {\r\n    const timeDetail = e.target.value.toString().split(\":\");\r\n    setTempDateTime(\r\n      new Date(new Date(tempDateTime).setHours(timeDetail[0], timeDetail[1]))\r\n    );\r\n  }\r\n\r\n  function handleActivation() {\r\n    setActivated(true);\r\n    setTempDateTime(new Date());\r\n  }\r\n\r\n  function handleCancelClick() {\r\n    setTempDateTime(dateTime);\r\n    setActivated(false);\r\n  }\r\n\r\n  function handleSaveClick() {\r\n    setActivated(false);\r\n    setDateTime(tempDateTime);\r\n  }\r\n\r\n  return activated ? (\r\n    <div className=\"field is-horizontal\">\r\n      <div className=\"field-body\">\r\n        <div className=\"field\">\r\n          <p className=\"control \">\r\n            <input\r\n              className=\"input\"\r\n              type=\"date\"\r\n              value={moment(tempDateTime).format(\"yyyy-MM-DD\")}\r\n              onChange={(e) => handleDateChange(e)}\r\n            />\r\n          </p>\r\n        </div>\r\n        <div className=\"field\">\r\n          <p className=\"control\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"time\"\r\n              value={moment(tempDateTime).format(\"HH:mm\")}\r\n              onChange={(e) => handleTimeChange(e)}\r\n            />\r\n          </p>\r\n        </div>\r\n        <div className=\"field\">\r\n          <div\r\n            className=\"button is-outlined is-success is-light\"\r\n            onClick={() => handleSaveClick()}\r\n          >\r\n            Save\r\n          </div>\r\n          <div\r\n            className=\"button is-outlined is-link is-light\"\r\n            onClick={() => handleCancelClick()}\r\n          >\r\n            Cancel\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div onClick={() => handleActivation()}>\r\n      <div className=\"button is-outlined is-light is-link\">\r\n        {new Date(dateTime).getTime() !==\r\n        new Date(constants.defaultDueDate).getTime() ? (\r\n          <span>{moment(dateTime).calendar()}</span>\r\n        ) : (\r\n          <span>\r\n            <span className=\"icon\">\r\n              <i className=\"far fa-clock\"></i>\r\n            </span>\r\n            <span>Schedule</span>\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateAndTimeSelector;\r\n","import React from \"react\";\r\n\r\nconst FormButtons = ({\r\n  button1Click,\r\n  button1Text = \"Done\",\r\n  button2Click,\r\n  button2Text = \"Cancel\",\r\n}) => {\r\n  return (\r\n    <div className=\"field is-grouped\">\r\n      <div className=\"control\">\r\n        <button\r\n          className=\"button is-success is-light is-outlined\"\r\n          onClick={async () => await button1Click()}\r\n        >\r\n          {button1Text}\r\n        </button>\r\n      </div>\r\n      <div className=\"control\">\r\n        <button\r\n          className=\"button is-link is-light is-outlined\"\r\n          onClick={() => button2Click()}\r\n        >\r\n          {button2Text}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormButtons;\r\n","import React from \"react\";\r\n\r\nconst DropDown = ({ initialValue, handleValueChange, dropDownOptions }) => {\r\n  return (\r\n    <div className=\"control\">\r\n      <div className=\"select\">\r\n        <select\r\n          onChange={(e) => handleValueChange(e.target.value)}\r\n          value={initialValue}\r\n        >\r\n          {dropDownOptions.map((priority) => {\r\n            return (\r\n              <option key={priority.value} value={priority.value}>\r\n                {priority.priority}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTask } from \"../services/useTask\";\r\nimport * as constants from \"../Constants/constants\";\r\nimport DateAndTimeSelector from \"./DateAndTimeSelector\";\r\nimport FormButtons from \"./FormButtons\";\r\n// import PriorityTags from \"./components/PriorityTags\";\r\nimport DropDown from \"./DropDown\";\r\nimport moment from \"moment\";\r\n\r\nconst TaskForm = () => {\r\n  const store = useTask();\r\n\r\n  const [activated, setActivated] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(constants.defaultDueDate);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [priority, setPriority] = useState(constants.selectPriority[0].value);\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    tagList.forEach((tag) => {\r\n      if (tag.category === constants.tagCategory.datetime) {\r\n        if (tag.id === 1) {\r\n          setDueDate(() => new Date(new Date().setHours(9, 0, 0, 0)));\r\n        } else if (tag.id === 2) {\r\n          setDueDate(\r\n            () =>\r\n              new Date(moment(new Date().setHours(9, 0, 0, 0)).add(1, \"days\"))\r\n          );\r\n        }\r\n      } else if (tag.category === constants.tagCategory.projects) {\r\n      }\r\n    });\r\n    return () => {};\r\n  }, [tagList]);\r\n\r\n  async function addTask() {\r\n    if (validateInput()) {\r\n      const newTask = {\r\n        title: title,\r\n        description: description,\r\n        completed: false,\r\n        dueDate: dueDate,\r\n        priority: priority,\r\n      };\r\n      await store.addTask(newTask);\r\n      setActivated(false);\r\n      resetForm();\r\n    }\r\n  }\r\n\r\n  function handleFormClose() {\r\n    resetForm();\r\n    setActivated(false);\r\n  }\r\n\r\n  function resetForm() {\r\n    setTitle(\"\");\r\n    setDueDate(constants.defaultDueDate);\r\n    setTitleError(\"\");\r\n    setPriority(constants.selectPriority[0].value);\r\n    setDescription(\"\");\r\n    setTagList([]);\r\n  }\r\n\r\n  function validateInput() {\r\n    let result = true;\r\n    if (title.trim() === \"\") {\r\n      result = false;\r\n      setTitleError(\"Task title cannot be empty\");\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function setDateTime(dateTime) {\r\n    setDueDate(dateTime);\r\n  }\r\n\r\n  function handleTaskPriority(priority) {\r\n    setPriority(priority);\r\n  }\r\n\r\n  function handleTitleChange(title) {\r\n    setTitle(title);\r\n    processText(title);\r\n  }\r\n\r\n  function processText(input) {\r\n    const tempTagList = [...tagList];\r\n\r\n    const r_today = /(\\btod\\b|\\btoday\\b)/i;\r\n    const r_tomorrow = /(\\btom\\b|\\btomorrow\\b)/i;\r\n    const category = constants.tagCategory.datetime;\r\n\r\n    if (\r\n      r_today.test(input) &&\r\n      !tempTagList.find((tag) => tag.id === 1) &&\r\n      !tempTagList.find(\r\n        (tag) => tag.category === constants.tagCategory.datetime\r\n      )\r\n    ) {\r\n      tempTagList.push({\r\n        id: 1,\r\n        text: \"today\",\r\n        category: category,\r\n      });\r\n      setTagList(tempTagList);\r\n    } else if (\r\n      !r_today.test(input) &&\r\n      tempTagList.find((tag) => tag.id === 1)\r\n    ) {\r\n      handleTagDelete(1);\r\n    }\r\n\r\n    if (\r\n      r_tomorrow.test(input) &&\r\n      !tempTagList.find((tag) => tag.id === 2) &&\r\n      !tempTagList.find(\r\n        (tag) => tag.category === constants.tagCategory.datetime\r\n      )\r\n    ) {\r\n      tempTagList.push({\r\n        id: 2,\r\n        text: \"tomorrow\",\r\n        category: category,\r\n      });\r\n      setTagList(tempTagList);\r\n    } else if (\r\n      !r_tomorrow.test(input) &&\r\n      tempTagList.find((tag) => tag.id === 2)\r\n    ) {\r\n      handleTagDelete(2);\r\n    }\r\n\r\n    if (\r\n      !tempTagList.find(\r\n        (tag) => tag.category === constants.tagCategory.projects\r\n      )\r\n    ) {\r\n    }\r\n  }\r\n\r\n  function handleTagDelete(tagId) {\r\n    const tempTagList = [...tagList];\r\n    const index = tempTagList.findIndex((tag) => tag.id === tagId);\r\n    if (index !== -1) {\r\n      tempTagList.splice(index, 1);\r\n      setTagList(tempTagList);\r\n      setDueDate(new Date(constants.defaultDueDate));\r\n    }\r\n  }\r\n\r\n  return activated ? (\r\n    <div className=\"block\">\r\n      <div className=\"p-2 border-gray-light\">\r\n        <div className=\"field\">\r\n          <div className=\"control has-icons-left has-icons-right\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"Bring milk and sweets\"\r\n              value={title}\r\n              onChange={(e) => handleTitleChange(e.target.value)}\r\n              onFocus={() => setTitleError(\"\")}\r\n            />\r\n            <span className=\"icon is-small is-left\">\r\n              <i className=\"fas fa-tasks\"></i>\r\n            </span>\r\n            <span className=\"icon is-small is-right\">\r\n              <i className=\"fas fa-check\"></i>\r\n            </span>\r\n          </div>\r\n          <p className=\"help is-danger\">{titleError}</p>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <textarea\r\n            className=\"textarea has-fixed-size\"\r\n            placeholder=\"Enter the task description here\"\r\n            rows=\"2\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"field columns is-mobile\">\r\n          <div className=\"column is-narrow pb-0\">\r\n            <DropDown\r\n              initialValue={priority}\r\n              handleValueChange={handleTaskPriority}\r\n              dropDownOptions={constants.selectPriority}\r\n            />\r\n          </div>\r\n          <div className=\"column pb-0\">\r\n            <div className=\"tags\">\r\n              {tagList.map((tag) => {\r\n                return (\r\n                  <span className=\"tag is-info is-light\" key={tag.id}>\r\n                    {tag.text}\r\n                    <button\r\n                      className=\"delete is-small\"\r\n                      onClick={() => handleTagDelete(tag.id)}\r\n                    ></button>\r\n                  </span>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"column is-narrow\">\r\n            <DateAndTimeSelector dateTime={dueDate} setDateTime={setDateTime} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"p-1\">\r\n        <FormButtons\r\n          button1Click={addTask}\r\n          button1Text={\"Add Task\"}\r\n          button2Click={handleFormClose}\r\n          button2Text={\"Cancel\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"control pl-4\">\r\n      <button\r\n        className=\"button is-outlined is-success is-light is-fullwidth\"\r\n        onClick={() => setActivated(true)}\r\n      >\r\n        Add Task\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useState } from \"react\";\r\nimport { useTask } from \"../services/useTask\";\r\n\r\nconst ProjectForm = ({ setActivated }) => {\r\n  const store = useTask();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(\"\");\r\n\r\n  function handleCloseForm() {\r\n    setTitle(\"\");\r\n    setTitleError(\"\");\r\n    setActivated(false);\r\n  }\r\n\r\n  async function handleAddProject() {\r\n    if (validateInput()) {\r\n      await store.addProject(title);\r\n      setActivated(false);\r\n    }\r\n  }\r\n\r\n  function validateInput() {\r\n    let result = true;\r\n    if (title.trim() === \"\") {\r\n      result = false;\r\n      setTitleError(\"project must have a name\");\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"field\">\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          onFocus={() => setTitleError(\"\")}\r\n        />\r\n        <p className=\"help is-danger\">{titleError}</p>\r\n      </div>\r\n      <div className=\"field is-grouped\">\r\n        <div className=\"control\">\r\n          <div\r\n            className=\"button is-success is-light\"\r\n            onClick={async () => await handleAddProject()}\r\n          >\r\n            Add Project\r\n          </div>\r\n        </div>\r\n        <div className=\"control\" onClick={() => handleCloseForm()}>\r\n          <div className=\"button is-light is-info\">Cancel</div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTask } from \"../services/useTask\";\r\nimport { defaultProjects } from \"../Constants/constants\";\r\n\r\nconst DefaultProjectList = () => {\r\n  const store = useTask();\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (store.defaultProjects !== null) {\r\n      setProjects([...store.defaultProjects, ...defaultProjects]);\r\n    }\r\n    return () => {};\r\n  }, [store.defaultProjects, store.currentProject]);\r\n\r\n  function handleProjectClick(project) {\r\n    store.changeCurrentProject(project);\r\n  }\r\n\r\n  return (\r\n    <table className=\"table is-hoverable is-fullwidth\">\r\n      <tbody>\r\n        {store.currentProject &&\r\n          projects.map((project) => {\r\n            return (\r\n              <tr\r\n                key={project.id}\r\n                className={\r\n                  project.id === store.currentProject.id\r\n                    ? \"is-selected is-clickable\"\r\n                    : \"is-clickable\"\r\n                }\r\n                onClick={async () => handleProjectClick(project)}\r\n              >\r\n                <td>{project.title}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default DefaultProjectList;\r\n","import React, { useState } from \"react\";\r\nimport ProjectForm from \"./ProjectForm\";\r\nimport { useTask } from \"../services/useTask\";\r\nimport DefaultProjectList from \"./DefaultProjectList\";\r\n\r\nfunction ProjectList() {\r\n  const store = useTask();\r\n  const [activated, setActivated] = useState(false);\r\n\r\n  async function handleChangeProject(project) {\r\n    await store.changeCurrentProject(project);\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <DefaultProjectList />\r\n      <table className=\"table is-hoverable is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>Projects</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {store.projects.map((project) => {\r\n            return (\r\n              <tr\r\n                key={project.id}\r\n                className={\r\n                  project.id === store.currentProject.id\r\n                    ? \"is-selected is-clickable\"\r\n                    : \"is-clickable\"\r\n                }\r\n                onClick={async () => await handleChangeProject(project)}\r\n              >\r\n                <td>{project.title}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        {activated ? (\r\n          <ProjectForm setActivated={setActivated} />\r\n        ) : (\r\n          <div\r\n            className=\"button is-light is-success is-outlined is-fullwidth\"\r\n            onClick={() => setActivated(!activated)}\r\n          >\r\n            Add Project\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n","import { Helmet } from \"react-helmet\";\r\nimport React from \"react\";\r\n\r\nconst Seo = () => {\r\n  const title = \"Karma\";\r\n  const description = \"A TODO App\";\r\n  //const keywords = [\"karma\", \"todo\", \"react\", \"app\", \"SPA\"];\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <script\r\n        src=\"https://kit.fontawesome.com/cf77766bad.js\"\r\n        crossorigin=\"anonymous\"\r\n      ></script>\r\n    </Helmet>\r\n  );\r\n};\r\nexport default Seo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useGlobals } from \"../services/useGlobals\";\r\nimport DropDown from \"./DropDown\";\r\nimport DateAndTimeSelector from \"./DateAndTimeSelector\";\r\nimport * as constants from \"../Constants/constants\";\r\nimport FormButtons from \"./FormButtons\";\r\nimport { useTask } from \"../services/useTask\";\r\nimport moment from \"moment\";\r\n\r\nconst TaskDetail = () => {\r\n  const globals = useGlobals();\r\n  const task = globals.detailTask;\r\n  const store = useTask();\r\n  // return prematurely if task is not defined\r\n\r\n  //form states\r\n  const [title, setTitle] = useState(task ? task.title : \"\");\r\n  const [description, setDescription] = useState(task ? task.description : \"\");\r\n  const [priority, setPriority] = useState(task ? task.priority : 1);\r\n  const [dueDate, setDueDate] = useState(task ? task.dueDate : null);\r\n  const [customDueDate, setCustomDueDate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (globals.detailTask) {\r\n      const task = globals.detailTask;\r\n\r\n      setTitle(task.title);\r\n      setDescription(task.description);\r\n      setPriority(task.priority);\r\n      setDueDate(task.dueDate);\r\n    }\r\n    return () => {};\r\n  }, [globals.detailTask]);\r\n\r\n  function handleTaskPriority(priority) {\r\n    setPriority(priority);\r\n  }\r\n\r\n  async function handleSubmit() {\r\n    if (task) {\r\n      const newTask = {\r\n        title: title,\r\n        description: description,\r\n        dueDate: dueDate,\r\n        completed: false,\r\n        priority: priority,\r\n      };\r\n      await store.updateTask(task.id, newTask);\r\n    }\r\n    globals.deactivateTaskDetailModal();\r\n  }\r\n\r\n  function handleCancel() {\r\n    globals.deactivateTaskDetailModal();\r\n  }\r\n\r\n  return (\r\n    <div className={globals.taskDetailActivated ? \"modal is-active\" : \"modal\"}>\r\n      <div className=\"modal-background\" onClick={() => handleCancel()}></div>\r\n      {task && (\r\n        <div className=\"modal-content has-background-white-bis has-text-black-bis\">\r\n          <div className=\"section\">\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                <span className=\"icon\">\r\n                  <i className=\"fas fa-tasks\"></i>\r\n                </span>\r\n                <span>Task Title</span>\r\n              </label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Do Laundry\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </div>\r\n              <p className=\"help is-danger\"></p>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                <span className=\"icon\">\r\n                  <i className=\"fas fa-align-left\"></i>\r\n                </span>\r\n                <span>Task Description</span>\r\n              </label>\r\n              <div className=\"control\">\r\n                <textarea\r\n                  className=\"textarea\"\r\n                  placeholder=\"what are the steps to do laundry??? i need to google bro...\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <div className=\"control\">\r\n                <strong>Due Date : </strong> {moment(dueDate).calendar()}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field is-grouped\">\r\n              <DropDown\r\n                handleValueChange={handleTaskPriority}\r\n                initialValue={priority}\r\n                dropDownOptions={constants.selectPriority}\r\n              />\r\n              {!customDueDate ? (\r\n                <div className=\"field\">\r\n                  <div className=\"control\">\r\n                    <div\r\n                      className=\"button is-outlined is-info is-light\"\r\n                      onClick={() => setCustomDueDate(!customDueDate)}\r\n                    >\r\n                      Custom due date\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <DateAndTimeSelector\r\n                  dateTime={dueDate}\r\n                  setDateTime={setDueDate}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <FormButtons\r\n              button1Text={\"Update Task\"}\r\n              button2Text={\"Cancel\"}\r\n              button1Click={handleSubmit}\r\n              button2Click={handleCancel}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React from \"react\";\r\nimport { useAuth } from \"../services/useAuth\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <section className=\"hero  is-fullheight-with-navbar\">\r\n      <div className=\"hero-head\"></div>\r\n\r\n      <div className=\"hero-body\">\r\n        <HomePageFront />\r\n      </div>\r\n\r\n      <div className=\"hero-foot pb-2 px-2\">\r\n        <div className=\"container\">\r\n          <nav className=\"level content\">\r\n            <div className=\"level-left\">\r\n              <p className=\"level-item\">KARMA &copy; 2021</p>\r\n            </div>\r\n            <div className=\"level-right\">\r\n              <p className=\"level-item\">FAQ</p>\r\n              <p className=\"level-item mr-1 mb-4\">Email Support</p>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nfunction HomePageFront() {\r\n  const auth = useAuth();\r\n\r\n  return (\r\n    <div className=\"container has-text-centered\">\r\n      <p className=\"content\">\r\n        <span className=\"subtitle\">\r\n          A Minimalistic TODO App with powerfull features\r\n          <br />\r\n          Please <strong>SignUp</strong> or <strong>Log In</strong> to Continue\r\n        </span>\r\n      </p>\r\n      <div className=\"buttons\" style={{ justifyContent: \"center\" }}>\r\n        <button\r\n          className=\"button is-outlined is-success is-light\"\r\n          onClick={async () => await auth.signIn()}\r\n        >\r\n          Sign Up\r\n        </button>\r\n        <button\r\n          className=\"button is-outlined is-link is-light\"\r\n          onClick={async () => await auth.signIn()}\r\n        >\r\n          Log In\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Toggler = ({ togglerOn, setTogglerOn }) => {\r\n  function handleTogglerClick() {\r\n    setTogglerOn(!togglerOn);\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={() => handleTogglerClick()}\r\n      className=\"toggler button is-light\"\r\n    >\r\n      <div\r\n        className={\r\n          togglerOn\r\n            ? \"toggler-circle toggler-on has-background-success\"\r\n            : \"toggler-circle has-background-grey\"\r\n        }\r\n      ></div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Toggler;\r\n","import React, { useState } from \"react\";\r\nimport Toggler from \"./Toggler\";\r\nimport { useTask } from \"../services/useTask\";\r\nimport { useGlobals } from \"../services/useGlobals\";\r\n\r\nconst Settings = () => {\r\n  const [activated, setActivated] = useState(false);\r\n  const store = useTask();\r\n  const globals = useGlobals();\r\n\r\n  function handleCogClick() {\r\n    setActivated(!activated);\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-0 pb-0\">\r\n      <div className=\"level p-2 is-mobile\">\r\n        <div className=\"level-left\">\r\n          <div className=\"level-item is-size-4 is-uppercase has-text-weight-semibold\">\r\n            {store.currentProject ? store.currentProject.title : \"\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"level-right\">\r\n          <div className=\"level-item\">\r\n            <button className=\"button\" onClick={() => handleCogClick()}>\r\n              <span className=\"icon\">\r\n                <i className=\"fas fa-cog\"></i>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {activated && (\r\n        <div className=\"px-2\">\r\n          <div className=\"columns is-justify-content-space-between is-mobile\">\r\n            <div className=\"column is-narrow\">\r\n              <span>Show Completed Tasks</span>\r\n            </div>\r\n            <div className=\"column is-narrow\">\r\n              <Toggler\r\n                togglerOn={globals.showCompleted}\r\n                setTogglerOn={globals.setShowCompleted}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"columns is-justify-content-space-between is-mobile\">\r\n            <div className=\"column is-narrow\">\r\n              <span>Show Archived Tasks</span>\r\n            </div>\r\n            <div className=\"column is-narrow\">\r\n              <Toggler\r\n                togglerOn={globals.showArchived}\r\n                setTogglerOn={globals.setShowArchived}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport \"./config/firebase.config\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { TaskContextProvider } from \"./services/useTask\";\r\nimport ProjectList from \"./components/ProjectList\";\r\nimport Seo from \"./services/Seo\";\r\nimport TaskDetail from \"./components/TaskDetail\";\r\nimport { useAuth } from \"./services/useAuth\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport \"./App.scss\";\r\nimport Settings from \"./components/Settings\";\r\nimport { useGlobals } from \"./services/useGlobals\";\r\n\r\nconst App = () => {\r\n  const auth = useAuth();\r\n  const globals = useGlobals();\r\n\r\n  return (\r\n    <Router>\r\n      <Seo />\r\n      <div>\r\n        <Navbar />\r\n      </div>\r\n\r\n      {auth.user ? (\r\n        <section className=\"section\">\r\n          <TaskContextProvider>\r\n            <TaskDetail />\r\n            <div className=\"columns container mx-auto\">\r\n              <div\r\n                className={\r\n                  globals.sideBarStatus\r\n                    ? \"column is-one-fifth has-display-none transition-all-1\"\r\n                    : \"column is-one-fifth transition-all-1\"\r\n                }\r\n              >\r\n                <ProjectList />\r\n              </div>\r\n              <div className=\"column\">\r\n                <Settings />\r\n                <div className=\"block\">\r\n                  <TaskList />\r\n                </div>\r\n                <div className=\"block\">\r\n                  <TaskForm />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TaskContextProvider>\r\n        </section>\r\n      ) : (\r\n        <div className=\"\">\r\n          <HomePage />\r\n        </div>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { AuthContextProvider } from \"./services/useAuth\";\r\nimport { GlobalContextProvider } from \"./services/useGlobals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalContextProvider>\r\n      <AuthContextProvider>\r\n        <App />\r\n      </AuthContextProvider>\r\n    </GlobalContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}